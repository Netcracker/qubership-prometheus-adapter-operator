# Copyright 2024 NetCracker Technology Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: monitoring.qubership.org/v1alpha1
kind: CustomScaleMetricRule
metadata:
  name: kubelet-custom-metric-rule
  labels:
    name: kubelet-custom-metric-rule
    app.kubernetes.io/name: kubelet-custom-metric-rule
    app.kubernetes.io/instance: {{ cat "kubelet-custom-metric-rule-" .Release.Namespace | nospace | trunc 63 | trimSuffix "-" }}
    {{- include "qubership-prometheus-adapter-operator.commonLabels" . | nindent 4 }}
spec:
  rules:
    # Container/Pod CPU usage metrics
    - seriesQuery: 'container_cpu_usage_seconds_total{namespace!="", pod!="", container!~"POD|"}'
      name:
        matches: (.*)
      resources:
        overrides:
          namespace:
            resource: "namespace"
          pod:
            resource: "pod"
      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>, namespace!="", pod!="", container!="POD"}[5m])) by (<<.GroupBy>>)
    # Container/Pod Memory usage metrics
    - seriesQuery: 'container_memory_working_set_bytes{namespace!="", pod!="", container!~"POD|"}'
      name:
        matches: (.*)
      resources:
        overrides:
          namespace:
            resource: "namespace"
          pod:
            resource: "pod"
      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>, namespace!="", pod!="", container!="POD|"}) by (<<.GroupBy>>)
    # Container/Pod uptime metrics
    - seriesQuery: 'container_start_time_seconds{namespace!="", pod!="", container!~"POD|"}'
      name:
        matches: (.*)
      resources:
        overrides:
          namespace:
            resource: "namespace"
          pod:
            resource: "pod"
      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>, namespace!="", pod!="", container!~"POD|"}[5m])) by (<<.GroupBy>>)
    # Node CPU and Memory usage metrics
    - seriesQuery: 'node_cpu_usage_seconds_total{namespace!="", pod!="", container!~"POD|"}'
      name:
        matches: (.*)
      resources: {}
      metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>, namespace!="", pod!="", container!~"POD|"}[5m])) by (<<.GroupBy>>)
    # Node CPU and Memory usage metrics
    - seriesQuery: 'node_memory_working_set_bytes{namespace!="", pod!="", container!~"POD|"}'
      name:
        matches: (.*)
      resources: {}
      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>, namespace!="", pod!="", container!~"POD|"}) by (<<.GroupBy>>)
